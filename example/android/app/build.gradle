def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
  localPropertiesFile.withReader('UTF-8') { reader -> localProperties.load(reader)
  }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
  throw new GradleException(
      "Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
  flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
  flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.huawei.agconnect'

android {
  compileSdkVersion 31

  lintOptions {
    disable 'InvalidPackage'
  }

  defaultConfig {
    applicationId "com.moengage.sampleapp"
    minSdkVersion 17
    targetSdkVersion 30
    versionCode flutterVersionCode.toInteger()
    versionName flutterVersionName
    testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
  }

  signingConfigs {
    Properties properties = new Properties()
    properties.load(file('keystore.properties').newDataInputStream())
    release {
      storeFile file(properties.getProperty("storeFilePath"))
      storePassword properties.getProperty("storePassword")
      keyAlias properties.getProperty("keyAlias")
      keyPassword properties.getProperty("keyPassword")
    }
    debug {
      storeFile file(properties.getProperty("storeFilePath"))
      storePassword properties.getProperty("storePassword")
      keyAlias properties.getProperty("keyAlias")
      keyPassword properties.getProperty("keyPassword")
    }
  }

  buildTypes {
    release {
      signingConfig signingConfigs.release
    }
    debug {
      signingConfig signingConfigs.debug
    }
  }
}

flutter {
  source '../..'
}

dependencies {
  testImplementation 'junit:junit:4.13'
  androidTestImplementation("androidx.test.ext:junit:1.1.2")
  androidTestImplementation("androidx.test.espresso:espresso-core:3.3.0")
  implementation("com.moengage:moe-android-sdk:11.4.00")
  implementation("com.google.firebase:firebase-messaging:20.3.0")
  implementation("androidx.lifecycle:lifecycle-process:2.2.0")
  implementation("com.moengage:hms-pushkit:2.0.01")
  implementation("com.moengage:rich-notification:2.2.00")
  implementation("com.huawei.hms:push:4.0.4.301")
  implementation("com.moengage:inbox-core:1.0.00")
}

apply plugin: 'com.google.gms.google-services'
